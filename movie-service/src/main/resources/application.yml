spring:
  profiles:
    active: local

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres-movie:5432/netflik?binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified&currentSchema=public
    username: netflik
    password: netflik
    driver-class-name: org.postgresql.Driver
  jpa:
    database: postgresql
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  jackson:
    time-zone: Asia/Kolkata
  servlet:
    multipart:
      max-request-size: 50MB
      max-file-size: 50MB
  application:
    name: movie-service
  rabbitmq:
    host: rabbitmq
    port: 5672
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://keycloak-tenflix:8080/realms/tenflix/protocol/openid-connect/certs
  kafka:
    listener:
      missing-topics-fatal: false
    producer:
      bootstrap-servers: kafka:29092
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: movie-service-cg
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"




server:
  port: 8200

log4j:
  logger:
    org:
      springframework:
        web: INFO

rabbitmq:
  exchange:
    name: movie_exchange
  queue:
    email:
      name: email
    movie:
      add: add_movie
      update: update_movie
      delete: delete_movie
  binding:
    email:
      routing:
        key: email_routing_key
    movieAdd:
      routing:
        key: addMovie_routing_key
    movieUpdate:
      routing:
        key: updateMovie_routing_key
    movieDelete:
      routing:
        key: deleteMovie_routing_key

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: health,info
  info:
    env:
      enabled: true
  server:
    port: 8200
info:
  app:
    name: movie-service
    description: movie command service


---
spring:
  config:
    activate:
      on-profile: local
  datasource:
   url: jdbc:postgresql://localhost:5432/netflik?binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified&currentSchema=public
   username: netflik
   password: netflik
   driver-class-name: org.postgresql.Driver
  jpa:
   database: postgresql
   hibernate:
     ddl-auto: update
   database-platform: org.hibernate.dialect.PostgreSQLDialect
   show-sql: true
  jackson:
   time-zone: Asia/Kolkata
  servlet:
   multipart:
     max-request-size: 50MB
     max-file-size: 50MB
  application:
   name: movie-service
  rabbitmq:
   host: localhost
   port: 5672
  kafka:
    listener:
      missing-topics-fatal: false
    producer:
      bootstrap-servers: localhost:29092
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      bootstrap-servers: localhost:29092
      group-id: movie-service-cg
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"








server:
   port: 8200
log4j:
   logger:
     org:
       springframework:
         web: INFO
rabbitmq:
  exchange:
    name: movie_exchange
  queue:
    email:
      name: email
    movie:
      add: add_movie
      update: update_movie
      delete: delete_movie
  binding:
    email:
      routing:
        key: email_routing_key
    movieAdd:
      routing:
        key: addMovie_routing_key
    movieUpdate:
      routing:
        key: updateMovie_routing_key
    movieDelete:
      routing:
        key: deleteMovie_routing_key

management:
 endpoint:
   health:
     show-details: always
 endpoints:
   web:
     exposure:
       include: health,info
 info:
   env:
     enabled: true
 server:
   port: 8200
info:
 app:
   name: movie-service
   description: movie command service
