/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.kafkastreams.movie.commons.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Video extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7874921885673006852L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Video\",\"namespace\":\"com.kafkastreams.movie.commons.avro\",\"fields\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"public_id\",\"type\":\"string\"},{\"name\":\"synopsis\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"movie_id\",\"type\":\"int\"},{\"name\":\"created_on\",\"type\":{\"type\":\"long\",\"connect.version\":1,\"connect.name\":\"org.apache.kafka.connect.data.Timestamp\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"last_updated_on\",\"type\":{\"type\":\"long\",\"connect.version\":1,\"connect.name\":\"org.apache.kafka.connect.data.Timestamp\",\"logicalType\":\"timestamp-millis\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<Video> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Video> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Video> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Video> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Video> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Video to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Video from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Video instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Video fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private int id;
  private int length;
  private java.lang.CharSequence public_id;
  private java.lang.CharSequence synopsis;
  private java.lang.CharSequence title;
  private java.lang.CharSequence url;
  private int movie_id;
  private java.time.Instant created_on;
  private java.time.Instant last_updated_on;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Video() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param length The new value for length
   * @param public_id The new value for public_id
   * @param synopsis The new value for synopsis
   * @param title The new value for title
   * @param url The new value for url
   * @param movie_id The new value for movie_id
   * @param created_on The new value for created_on
   * @param last_updated_on The new value for last_updated_on
   */
  public Video(java.lang.Integer id, java.lang.Integer length, java.lang.CharSequence public_id, java.lang.CharSequence synopsis, java.lang.CharSequence title, java.lang.CharSequence url, java.lang.Integer movie_id, java.time.Instant created_on, java.time.Instant last_updated_on) {
    this.id = id;
    this.length = length;
    this.public_id = public_id;
    this.synopsis = synopsis;
    this.title = title;
    this.url = url;
    this.movie_id = movie_id;
    this.created_on = created_on.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.last_updated_on = last_updated_on.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return length;
    case 2: return public_id;
    case 3: return synopsis;
    case 4: return title;
    case 5: return url;
    case 6: return movie_id;
    case 7: return created_on;
    case 8: return last_updated_on;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: length = (java.lang.Integer)value$; break;
    case 2: public_id = (java.lang.CharSequence)value$; break;
    case 3: synopsis = (java.lang.CharSequence)value$; break;
    case 4: title = (java.lang.CharSequence)value$; break;
    case 5: url = (java.lang.CharSequence)value$; break;
    case 6: movie_id = (java.lang.Integer)value$; break;
    case 7: created_on = (java.time.Instant)value$; break;
    case 8: last_updated_on = (java.time.Instant)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public int getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(int value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'length' field.
   * @return The value of the 'length' field.
   */
  public int getLength() {
    return length;
  }


  /**
   * Sets the value of the 'length' field.
   * @param value the value to set.
   */
  public void setLength(int value) {
    this.length = value;
  }

  /**
   * Gets the value of the 'public_id' field.
   * @return The value of the 'public_id' field.
   */
  public java.lang.CharSequence getPublicId() {
    return public_id;
  }


  /**
   * Sets the value of the 'public_id' field.
   * @param value the value to set.
   */
  public void setPublicId(java.lang.CharSequence value) {
    this.public_id = value;
  }

  /**
   * Gets the value of the 'synopsis' field.
   * @return The value of the 'synopsis' field.
   */
  public java.lang.CharSequence getSynopsis() {
    return synopsis;
  }


  /**
   * Sets the value of the 'synopsis' field.
   * @param value the value to set.
   */
  public void setSynopsis(java.lang.CharSequence value) {
    this.synopsis = value;
  }

  /**
   * Gets the value of the 'title' field.
   * @return The value of the 'title' field.
   */
  public java.lang.CharSequence getTitle() {
    return title;
  }


  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.CharSequence value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'url' field.
   * @return The value of the 'url' field.
   */
  public java.lang.CharSequence getUrl() {
    return url;
  }


  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(java.lang.CharSequence value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'movie_id' field.
   * @return The value of the 'movie_id' field.
   */
  public int getMovieId() {
    return movie_id;
  }


  /**
   * Sets the value of the 'movie_id' field.
   * @param value the value to set.
   */
  public void setMovieId(int value) {
    this.movie_id = value;
  }

  /**
   * Gets the value of the 'created_on' field.
   * @return The value of the 'created_on' field.
   */
  public java.time.Instant getCreatedOn() {
    return created_on;
  }


  /**
   * Sets the value of the 'created_on' field.
   * @param value the value to set.
   */
  public void setCreatedOn(java.time.Instant value) {
    this.created_on = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'last_updated_on' field.
   * @return The value of the 'last_updated_on' field.
   */
  public java.time.Instant getLastUpdatedOn() {
    return last_updated_on;
  }


  /**
   * Sets the value of the 'last_updated_on' field.
   * @param value the value to set.
   */
  public void setLastUpdatedOn(java.time.Instant value) {
    this.last_updated_on = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Creates a new Video RecordBuilder.
   * @return A new Video RecordBuilder
   */
  public static com.kafkastreams.movie.commons.avro.Video.Builder newBuilder() {
    return new com.kafkastreams.movie.commons.avro.Video.Builder();
  }

  /**
   * Creates a new Video RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Video RecordBuilder
   */
  public static com.kafkastreams.movie.commons.avro.Video.Builder newBuilder(com.kafkastreams.movie.commons.avro.Video.Builder other) {
    if (other == null) {
      return new com.kafkastreams.movie.commons.avro.Video.Builder();
    } else {
      return new com.kafkastreams.movie.commons.avro.Video.Builder(other);
    }
  }

  /**
   * Creates a new Video RecordBuilder by copying an existing Video instance.
   * @param other The existing instance to copy.
   * @return A new Video RecordBuilder
   */
  public static com.kafkastreams.movie.commons.avro.Video.Builder newBuilder(com.kafkastreams.movie.commons.avro.Video other) {
    if (other == null) {
      return new com.kafkastreams.movie.commons.avro.Video.Builder();
    } else {
      return new com.kafkastreams.movie.commons.avro.Video.Builder(other);
    }
  }

  /**
   * RecordBuilder for Video instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Video>
    implements org.apache.avro.data.RecordBuilder<Video> {

    private int id;
    private int length;
    private java.lang.CharSequence public_id;
    private java.lang.CharSequence synopsis;
    private java.lang.CharSequence title;
    private java.lang.CharSequence url;
    private int movie_id;
    private java.time.Instant created_on;
    private java.time.Instant last_updated_on;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.kafkastreams.movie.commons.avro.Video.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.length)) {
        this.length = data().deepCopy(fields()[1].schema(), other.length);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.public_id)) {
        this.public_id = data().deepCopy(fields()[2].schema(), other.public_id);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.synopsis)) {
        this.synopsis = data().deepCopy(fields()[3].schema(), other.synopsis);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.title)) {
        this.title = data().deepCopy(fields()[4].schema(), other.title);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.url)) {
        this.url = data().deepCopy(fields()[5].schema(), other.url);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.movie_id)) {
        this.movie_id = data().deepCopy(fields()[6].schema(), other.movie_id);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.created_on)) {
        this.created_on = data().deepCopy(fields()[7].schema(), other.created_on);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.last_updated_on)) {
        this.last_updated_on = data().deepCopy(fields()[8].schema(), other.last_updated_on);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing Video instance
     * @param other The existing instance to copy.
     */
    private Builder(com.kafkastreams.movie.commons.avro.Video other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.length)) {
        this.length = data().deepCopy(fields()[1].schema(), other.length);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.public_id)) {
        this.public_id = data().deepCopy(fields()[2].schema(), other.public_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.synopsis)) {
        this.synopsis = data().deepCopy(fields()[3].schema(), other.synopsis);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.title)) {
        this.title = data().deepCopy(fields()[4].schema(), other.title);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.url)) {
        this.url = data().deepCopy(fields()[5].schema(), other.url);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.movie_id)) {
        this.movie_id = data().deepCopy(fields()[6].schema(), other.movie_id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.created_on)) {
        this.created_on = data().deepCopy(fields()[7].schema(), other.created_on);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.last_updated_on)) {
        this.last_updated_on = data().deepCopy(fields()[8].schema(), other.last_updated_on);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public int getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder setId(int value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'length' field.
      * @return The value.
      */
    public int getLength() {
      return length;
    }


    /**
      * Sets the value of the 'length' field.
      * @param value The value of 'length'.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder setLength(int value) {
      validate(fields()[1], value);
      this.length = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'length' field has been set.
      * @return True if the 'length' field has been set, false otherwise.
      */
    public boolean hasLength() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'length' field.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder clearLength() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'public_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getPublicId() {
      return public_id;
    }


    /**
      * Sets the value of the 'public_id' field.
      * @param value The value of 'public_id'.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder setPublicId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.public_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'public_id' field has been set.
      * @return True if the 'public_id' field has been set, false otherwise.
      */
    public boolean hasPublicId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'public_id' field.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder clearPublicId() {
      public_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'synopsis' field.
      * @return The value.
      */
    public java.lang.CharSequence getSynopsis() {
      return synopsis;
    }


    /**
      * Sets the value of the 'synopsis' field.
      * @param value The value of 'synopsis'.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder setSynopsis(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.synopsis = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'synopsis' field has been set.
      * @return True if the 'synopsis' field has been set, false otherwise.
      */
    public boolean hasSynopsis() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'synopsis' field.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder clearSynopsis() {
      synopsis = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'title' field.
      * @return The value.
      */
    public java.lang.CharSequence getTitle() {
      return title;
    }


    /**
      * Sets the value of the 'title' field.
      * @param value The value of 'title'.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder setTitle(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.title = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'title' field has been set.
      * @return True if the 'title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'title' field.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder clearTitle() {
      title = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'url' field.
      * @return The value.
      */
    public java.lang.CharSequence getUrl() {
      return url;
    }


    /**
      * Sets the value of the 'url' field.
      * @param value The value of 'url'.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder setUrl(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.url = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'url' field has been set.
      * @return True if the 'url' field has been set, false otherwise.
      */
    public boolean hasUrl() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'url' field.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder clearUrl() {
      url = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'movie_id' field.
      * @return The value.
      */
    public int getMovieId() {
      return movie_id;
    }


    /**
      * Sets the value of the 'movie_id' field.
      * @param value The value of 'movie_id'.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder setMovieId(int value) {
      validate(fields()[6], value);
      this.movie_id = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'movie_id' field has been set.
      * @return True if the 'movie_id' field has been set, false otherwise.
      */
    public boolean hasMovieId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'movie_id' field.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder clearMovieId() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_on' field.
      * @return The value.
      */
    public java.time.Instant getCreatedOn() {
      return created_on;
    }


    /**
      * Sets the value of the 'created_on' field.
      * @param value The value of 'created_on'.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder setCreatedOn(java.time.Instant value) {
      validate(fields()[7], value);
      this.created_on = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'created_on' field has been set.
      * @return True if the 'created_on' field has been set, false otherwise.
      */
    public boolean hasCreatedOn() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'created_on' field.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder clearCreatedOn() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'last_updated_on' field.
      * @return The value.
      */
    public java.time.Instant getLastUpdatedOn() {
      return last_updated_on;
    }


    /**
      * Sets the value of the 'last_updated_on' field.
      * @param value The value of 'last_updated_on'.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder setLastUpdatedOn(java.time.Instant value) {
      validate(fields()[8], value);
      this.last_updated_on = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'last_updated_on' field has been set.
      * @return True if the 'last_updated_on' field has been set, false otherwise.
      */
    public boolean hasLastUpdatedOn() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'last_updated_on' field.
      * @return This builder.
      */
    public com.kafkastreams.movie.commons.avro.Video.Builder clearLastUpdatedOn() {
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Video build() {
      try {
        Video record = new Video();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.length = fieldSetFlags()[1] ? this.length : (java.lang.Integer) defaultValue(fields()[1]);
        record.public_id = fieldSetFlags()[2] ? this.public_id : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.synopsis = fieldSetFlags()[3] ? this.synopsis : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.title = fieldSetFlags()[4] ? this.title : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.url = fieldSetFlags()[5] ? this.url : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.movie_id = fieldSetFlags()[6] ? this.movie_id : (java.lang.Integer) defaultValue(fields()[6]);
        record.created_on = fieldSetFlags()[7] ? this.created_on : (java.time.Instant) defaultValue(fields()[7]);
        record.last_updated_on = fieldSetFlags()[8] ? this.last_updated_on : (java.time.Instant) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Video>
    WRITER$ = (org.apache.avro.io.DatumWriter<Video>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Video>
    READER$ = (org.apache.avro.io.DatumReader<Video>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










